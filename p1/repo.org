server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name $hostname;
    charset UTF-8;

    #
    # Access and error logs help you distinguish where a request failed:
    # did the error come from krill? Or did NGINX fail to reach the upstream
    # server?
    #
    access_log "/var/log/nginx/[hostname]-access.log";
    error_log "/var/log/nginx/[hostname]-error.log";

    #
    # SSL setup is missing - for recommended settings see https://ssl-config.mozilla.org
    #
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /etc/nginx/dhparam.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    #
    # allow clients to publish up to 128mb of data (before overhead) in one
    # request: needed to publish big repositories.
    #
    client_max_body_size 128m;

    #
    # The paths are split:
    #   * /rfc8181 should be open to all child CAs
    #   * /api has an allow-list of origins that can access it.
    #
    location /rfc8181 {
        proxy_pass https://127.0.0.1:3000/rfc8181;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # krill does not use a valid certificate/tls is handled by nginx
        proxy_ssl_verify off;
    }

    location /api {
        proxy_pass https://127.0.0.1:3000/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # allow IPv4 and IPv6 documentation ranges
        allow 192.0.2.0/24;
        allow 2001:0db8::/32;
        deny  all;

        # krill does not use a valid certificate/tls is handled by nginx
        proxy_ssl_verify off;
    }
}